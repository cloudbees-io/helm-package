apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: helm-package
description: 'Package a Helm chart'

inputs:
  chart:
    description: Path to the chart source directory.
    required: true
  version:
    description: The chart version that should be set.
  app-version:
    description: The application version that should be set. Defaults to the chart version.
  destination:
    description: The directory the packaged chart is written to.
  verify:
    description: Verify the dependency signatures using PGP.
  sign:
    description: Sign the packaged chart using PGP.
  sign-key:
    description: Name of the key to use when signing.
  values:
    description: Interpolated chart values that should be packaged with the chart.
  registry-configuration:
    description: >
      CloudBees registry configuration file containing the registries to use for loading images.
      By default it uses the file containing the registries configured under 'Integrations' in the CloudBees platform.
    default: ${{ cloudbees.registries }}

outputs:
  directory:
    description: Path to the output directory that contains the packaged chart.
    value: ${{steps.package.outputs.directory}}
  chart:
    description: Path to the packaged chart file.
    value: ${{steps.package.outputs.chart}}
  version:
    description: Version of the packaged chart.
    value: ${{steps.package.outputs.version}}
  name:
    description: Name of the chart as defined in Chart.yaml
    value: ${{steps.package.outputs.name}}

runs:
  using: composite
  steps:
    - id: package
      name: Package Helm chart
      uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/helm-package-action:${{action.scm.sha}}
      with:
        entrypoint: /cbhelmpkg
        args: "${{ inputs.chart }}"
      env:
        CBHELMPKG_VERSION: ${{ inputs.version }}
        CBHELMPKG_APP_VERSION: ${{ inputs.app-version }}
        CBHELMPKG_EMBED_VALUES: ${{ inputs.values }}
        CBHELMPKG_VERIFY: ${{ inputs.verify == 'true' }}
        CBHELMPKG_SIGN: ${{ inputs.sign == 'true' }}
        CBHELMPKG_KEY: ${{ inputs.sign-key }}
        CBHELMPKG_REGISTRY_CONFIG: ${{ inputs.registry-configuration }}
        CBHELMPKG_DESTINATION: ${{ inputs.destination }}
